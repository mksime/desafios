text = "In the beginning God created the heavens and the earth. Now the earth was formless and empty, darkness was over the surface of the deep, and the Spirit of God was hovering over the waters.\n\nAnd God said, \"Let there be light,\" and there was light. God saw that the light was good, and he separated the light from the darkness. God called the light \"day,\" and the darkness he called \"night.\" And there was evening, and there was morning - the first day."

print (text)
print (len(text))

import re

def tamanhoItens(l):
    return sum([ len(x) for x in l] )

lead_re = re.compile(r'(^\s+)(.*)$')

def alinhaTexto(texto, larguraLinha, ultimaLinhaParagrafo=0):
    m = lead_re.match(texto)     # detect and save leading whitespace
    if m is None:
        esquerda, direita, largura = '', texto, larguraLinha
    else:
        esquerda, direita, largura = m.group(1), m.group(2), larguraLinha - len(m.group(1))
    itens = direita.split()
    for i in range(len(itens) - 1): # add required space to each words, exclude last item
        itens[i] += ' '
    if not ultimaLinhaParagrafo: # number of spaces to add
        ContaEsquerda = largura - tamanhoItens(itens)
        while ContaEsquerda > 0 and len(itens) > 1:
            for i in range(len(itens) - 1):
                itens[i] += ' '
                ContaEsquerda -= 1
                if ContaEsquerda < 1:  
                    break
    resultado = esquerda + ''.join(itens)
    return resultado

def justificar(texto, larguraLinha):
    palavras = texto.split()
    totalPalavras = len(palavras)
    espacoVazio = [[0] * totalPalavras for i in range(totalPalavras)]
    for i in range(totalPalavras):
        espacoVazio[i][i] = larguraLinha - len(palavras[i])
        for j in range(i + 1, totalPalavras):
            espacoVazio[i][j] = espacoVazio[i][j - 1] - len(palavras[j]) - 1
    minima = [0] + [10 ** 20] * totalPalavras
    quebras = [0] * totalPalavras
    for j in range(totalPalavras):
        i = j
        while i >= 0:
            if espacoVazio[i][j] < 0:
                custo = 10 ** 10
            else:
                custo = minima[i] + espacoVazio[i][j] ** 2
            if minima[j + 1] > custo:
                minima[j + 1] = custo
                quebras[j] = i
            i -= 1
    linhas = []
    j = totalPalavras
    while j > 0:
        i = quebras[j - 1]
        linhas.append(' '.join(palavras[i:j]))
        j = i
    linhas.reverse()
    for linha in linhas:
        print (alinhaTexto(linha, larguraLinha, ultimaLinhaParagrafo=0))


texto="In the beginning God created the heavens and the earth. Now the earth was formless and empty, darkness was over the surface of the deep, and the Spirit of God was hovering over the waters.And God said, \"Let there be light,\" and there was light. God saw that the light was good, and he separated the light from the darkness. God called the light \"day,\" and the darkness he called \"night.\" And there was evening, and there was morning - the first day."
#texto = "Considere o problema de justificacao de textos (com a restricao de nao poder dividir as palavras): onde eu coloco as quebras de linha de forma que o texto fique o mais alinhado possivel. Discuta esse problema e implemente uma solucao usando programacao dinamica. Compare com a estrategia gananciosa de colocar o maximo de palavras possiveis numa mesma linha. Teste exemplos reais."
larguraLinha = 40
print (justificar(texto,larguraLinha))
